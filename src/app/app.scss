// http://ionicframework.com/docs/v2/theming/


// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.

  @font-face {
    font-family: 'Stirling Money';
    src:
    url('/assets/icon-font/Stirling Money.ttf') format('truetype'),
    url('/assets/icon-font/Stirling Money.woff') format('woff'),
    url('/assets/icon-font/Stirling Money.eot') format('eot'),
    url('/assets/icon-font/Stirling Money.svg?#Stirling Money') format('svg');
    font-weight: normal;
    font-style: normal;
  }

  [class^="sm-icon-"], [class*=" sm-icon-"] {
    font-family: 'Stirling Money' !important;
    font-size: 2.6rem;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  button[ion-fab] .button-inner [class^="sm-icon-"], [class*=" sm-icon-"] {
    padding-top: 5px;
    color: color($colors, secondary, base);
  }

  .sm-icon-cheque-01:before { content: "\e700"; }
  .sm-icon-atm-03-wf:before { content: "\e701"; }
  .sm-icon-atm-02:before { content: "\e702"; }
  .sm-icon-bank:before { content: "\e703"; }
  .sm-icon-cash:before { content: "\e704"; }
  .sm-icon-accounts-receivable:before { content: "\e705"; }
  .sm-icon-money-transfer:before { content: "\e706"; }
  .sm-icon-atm-01:before { content: "\e707"; }

.primary {
  color: color($colors, primary, base);
}

.secondary {
  color: color($colors, secondary, base);
}

.danger {
  color: color($colors, danger, base);
}

.success {
  color: color($colors, success, base);
}

.light {
  color: color($colors, light, base);
}

.dark {
  color: color($colors, dark, base);
}

ion-menu .toolbar-content,
ion-menu .toolbar-title {
  color: color($colors, light, base);
}

ion-menu .toolbar-background {
  background-color: darken(color($colors, secondary, base), 20%);
}

ion-menu .menu-inner,
ion-menu .menu-inner .content,
ion-menu .menu-inner .content .item {
  color: color($colors, light, base);
  background-color: color($colors, secondary, base)!important;
}

ion-menu .menu-inner .menu-header {
  color: color($colors, light, base);
  background-color: lighten(color($colors, secondary, base), 20%);
  padding: 10px;

  img {
    border-radius: 50%;
    max-height: 100px;
    max-width: 100px;
    border: 2px solid color($colors, light, base);
  }

  h4 {
    margin-top: 0.5rem;
    margin-bottom: 0;
  }
}

ion-item.ng-invalid.ng-touched .item-inner {
  border-bottom: 2px solid color($colors, danger, base) !important;
}

ion-input {
  padding-left: 5px;
}

ion-input.ng-valid.ng-touched[required], ion-input.ng-valid.ng-touched.required  {
  border-left: 5px solid color($colors, success, base);
}

ion-input.ng-invalid.ng-touched {
  border-left: 5px solid color($colors, danger, base);
}

ion-list .error-box {
    margin-left: 16px;
    padding: 5px;
    border-left: 1px solid color($colors, danger, base);
    border-right: 1px solid color($colors, danger, base);
    border-bottom: 1px solid color($colors, danger, base);
    background: rgba(color($colors, danger, base), 0.1);
    color: color($colors, danger, base);
}

.action-sheet-destructive ion-icon {
  color: color($colors, danger, base);
}
